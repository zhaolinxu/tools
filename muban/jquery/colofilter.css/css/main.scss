@import 'normalize.css',
        'colofilter.scss';

@import url(https://fonts.googleapis.com/css?family=Maven+Pro:400,700,900);
$responsive-font-size: calc(16px + 0.35vw + 0.35vh); 
$alpha-color: #E51C81;
$beta-color: #14C981;
$omega-color: #FFF;
$gamma-color: #1F1C81;
::root{
  font-size: $responsive-font-size;
  font-family: "Maven Pro", Helvetica, sans-serif;
}

*{
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
} 

html {
  font-family: "Maven Pro", Helvetica, sans-serif;
  font-size: $responsive-font-size;
}
// Overrite prism.css
:not(pre) > code[class*="language-"], pre[class*="language-"] {
  background: #EEE !important;
}
.token.property, .token.tag, .token.boolean, .token.number, .token.constant, .token.symbol {
  color: #1F1C81 !important;
}
.token.property, .token.tag, .token.boolean, .token.number, .token.constant, .token.symbol {
  color: #1F1C81 !important;
}
.token.selector, .token.attr-name, .token.string, .token.builtin {
  color: #15BB79 !important;
}
// End overrite prism.js

body {
  background: $omega-color;
  color: $gamma-color;
  overflow-x: hidden;

  &:before,
  &:after{
    content: '';
    width: 100%;
    height: 400px;

    background: $gamma-color;
    position: absolute;
    display: block;
    z-index: 10;
    border-bottom: 1em solid $gamma-color;
    transform-origin: 0 0;
    left: 0; 
    @media (max-width: 590px) {
      overflow: hidden; 
      height: auto;
      float: left;
      min-height: 400px;
    }
  }

  &:after {
    width: 120px;
    height: 120px;
    border-bottom: none;
    top: 420px;
    background: $gamma-color; 
    z-index: 8;
    left: 0;
    right: 0;
    margin: auto;
    transform: rotate(-45deg);
    transform-origin: 0 0; 

    @media (max-width: 590px) {
      display: none;
    }
  }
}

// Presentation

a {
  text-decoration: none;
  color: inherit;
  border-bottom: 3px solid $alpha-color;
}
strong {
  color: $alpha-color;
}
.container {
  padding: 1em;
  position: relative;
  z-index: 12;
}
header {
  text-align: center;
  padding: 0 2em ;

  h1 {
    border-bottom: 3px solid $alpha-color;
    border-top: 3px solid $beta-color;
    padding: 0 0.4em;
    display: inline-block;
    box-shadow: -2px -2px 0px $omega-color, -5px -5px 0px $alpha-color,2px 2px 0px $omega-color, 5px 5px 0px $beta-color;
    line-height: 2;
    color: $omega-color;

    @media (max-width: 590px) {
      font-size: 1.1em;
    }
  }

  color: #fff;
}

.spotifyBlock {
  border: $alpha-color 3px solid; 
  padding: 1em;
  background: #fff; 

  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  margin-bottom: 1em;
  overflow: hidden;
  position: relative;
  top: -3px;

  &.closed{
    height: 0;
    padding: 0;
    border: none;
  }

  img {
    width: 22%;
  }


}

.content {
  width: 100%;
  max-width: 920px;
  margin: 6.5em auto 0;
  @media (max-width: 590px) {
    margin: 2.5em auto 0;
  }
}

.closeBlock {
  color: $alpha-color;
  padding: 1em 1em;
  display: inline-block;
  text-decoration: none;
  border: 3px solid $alpha-color;
  margin-top: 2em;
  @media (max-width: 590px) {
    margin-top: 1em;
  }
}
.compat {
  margin-top: 1em;
  display: block;
  float: left;
  width: 100%;
}
footer {
  text-align: center;
}

// Demo 
.filters {
  margin-top: 1em;
  .block {
    width: 33.33%;
    float: left;
    overflow: hidden;
    padding: 0;
    margin: 0;
    height: auto;
    position: relative;

    transform: scale(0.99);
    cursor: pointer;
    transition: opacity 0.2s ease, transform 0.2s ease;


    img {
      filter: grayscale(100%) contrast(1.2);
      display: block;
      float: left;
      width: 100%;
    }
    
    &:active {
     opacity: 0.5; 
     transform: scale(0.89);     
    }
    span{
      display: block;
      width: 100%;
      position: absolute;
      text-align: center;
      color: #fff;
      font-size: 2em;
      font-weight: 900;
      text-transform: uppercase;
      z-index: 3;
      top: 50%;
      transform: translateY(-50%);     
    }
  }
}


// 
[class^="blend-"]{
  position: relative;

  &:before{
    content: '.blend-'attr(data-color)''attr(data-tint);
  }
}